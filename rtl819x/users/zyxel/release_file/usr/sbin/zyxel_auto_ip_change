#!/bin/sh

[ -f /var/auto_ipchange ] && rm /var/auto_ipchange

local changeLanIP_1="10.0.0.1"
local changeLanIP_2="192.168.212.1"

local wan_ifname=`uci get network.wan.ifname`
local wan_proto=`uci get network.wan.proto`

if [ "$wan_proto" == "pppoe" ] || [ "$wan_proto" == "pptp" ]; then
	local WAN="ppp0"
else
	local WAN=`uci get network.wan.ifname`
fi

local LAN="br0"

local lan_ip=$(ifconfig $LAN | awk '/inet addr/{print $2}' | awk -F':' '{print $2}')
local lan_mask=$(ifconfig $LAN | awk '/inet addr/{print $4}' | awk -F':' '{print $2}')

local wan_ip=$(ifconfig $WAN | awk '/inet addr/{print $2}' | awk -F':' '{print $2}')
local wan_mask=$(ifconfig $WAN | awk '/inet addr/{print $4}' | awk -F':' '{print $2}')

local conflict=true

## byte1
local lan_ip_byte1=$(echo $lan_ip | awk -F'.' '{print $1}')
local lan_mask_byte1=$(echo $lan_mask | awk -F'.' '{print $1}')

local wan_ip_byte1=$(echo $wan_ip | awk -F'.' '{print $1}')
local wan_mask_byte1=$(echo $wan_mask | awk -F'.' '{print $1}')

if [ "$((lan_ip_byte1&lan_mask_byte1))" != "$((wan_ip_byte1&wan_mask_byte1))" ]; then
	conflict=false
fi

## byte2
local lan_ip_byte2=$(echo $lan_ip | awk -F'.' '{print $2}')
local lan_mask_byte2=$(echo $lan_mask | awk -F'.' '{print $2}')

local wan_ip_byte2=$(echo $wan_ip | awk -F'.' '{print $2}')
local wan_mask_byte2=$(echo $wan_mask | awk -F'.' '{print $2}')

if [ "$((lan_ip_byte2&lan_mask_byte2))" != "$((wan_ip_byte2&wan_mask_byte2))" ]; then
	conflict=false
fi

## byte3
local lan_ip_byte3=$(echo $lan_ip | awk -F'.' '{print $3}')
local lan_mask_byte3=$(echo $lan_mask | awk -F'.' '{print $3}')

local wan_ip_byte3=$(echo $wan_ip | awk -F'.' '{print $3}')
local wan_mask_byte3=$(echo $wan_mask | awk -F'.' '{print $3}')

if [ "$((lan_ip_byte3&lan_mask_byte3))" != "$((wan_ip_byte3&wan_mask_byte3))" ]; then
	conflict=false
fi

## byte4
local lan_ip_byte4=$(echo $lan_ip | awk -F'.' '{print $4}')
local lan_mask_byte4=$(echo $lan_mask | awk -F'.' '{print $4}')

local wan_ip_byte4=$(echo $wan_ip | awk -F'.' '{print $4}')
local wan_mask_byte4=$(echo $wan_mask | awk -F'.' '{print $4}')

if [ "$((lan_ip_byte4&lan_mask_byte4))" != "$((wan_ip_byte4&wan_mask_byte4))" ]; then
	conflict=false
fi

## check LAN subnet
lan_subnet=$((lan_ip_byte1&lan_mask_byte1)).$((lan_ip_byte2&lan_mask_byte2)).$((lan_ip_byte3&lan_mask_byte3)).$((lan_ip_byte4&lan_mask_byte4))

if [ "$conflict" == "true" ]; then

	if [ "$lan_subnet" == "10.0.0.0" ]; then
		uci set network.br0.ipaddr=$changeLanIP_2
		uci commit
		sync #This command is for emmc and ext4 filesystem

	else
		uci set network.br0.ipaddr=$changeLanIP_1
		uci commit
		sync #This command is for emmc and ext4 filesystem

	fi

	/usr/sbin/ifup br0
	if [ "$wan_proto" == "dhcp" ] || [ "$wan_proto" == "pppoe" ]; then
		#/usr/sbin/zyxel_switch_port wan reset
		[ -f /var/wan_IP_trigger ] && touch /var/auto_ipchange
		if [ -f /var/wan_gateway ]; then
		  #Here add default route, since we might have chance without default routing
		  gatewayIP=$(cat /var/wan_gateway)
		  echo "Add default route"
		  route add -net default gw $gatewayIP dev $WAN
		fi
	fi
	/etc/init.d/dnsmasq stop
	/etc/init.d/dnsmasq start
	/usr/sbin/zyxel_switch_port lan auto_ipchange
else

	checkDNS=false
	lan_three_ip=$( echo $lan_ip | awk -F'.' '{print $1"."$2"."$3}' )
	
	while read line
	do

	 check_dns_ip=$(echo $line | awk '{print $2}' | awk -F'.' '{print $1"."$2"."$3}')
	 if [ "$check_dns_ip" == "$lan_three_ip" ]; then
		checkDNS=true
		break
	 fi

	done < /var/resolv.conf

	if [ "$checkDNS" == "true" ]; then

		if [ "$lan_three_ip" == "192.168.121" ]; then
			uci set network.br0.ipaddr=$changeLanIP_1
			uci commit
			sync #This command is for emmc and ext4 filesystem
		else
			uci set network.br0.ipaddr=$changeLanIP_2
			uci commit
			sync #This command is for emmc and ext4 filesystem
		fi

		/usr/sbin/ifup br0
		if [ "$wan_proto" == "dhcp" ] || [ "$wan_proto" == "pppoe" ]; then
			#/usr/sbin/zyxel_switch_port wan reset
			[ -f /var/wan_IP_trigger ] && touch /var/auto_ipchange
			[ -f /var/wan_gateway ] && {
			  echo "IP failover is not triggered!!!"
		  }
		fi
		/etc/init.d/dnsmasq stop
		/etc/init.d/dnsmasq start
		/usr/sbin/zyxel_switch_port lan auto_ipchange
	fi

fi
